<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.emos.wx.db.dao.TbUserDao">
    <select id="haveRootUser" resultType="boolean">
        SELECT IF(COUNT(*), TRUE, FALSE)
        FROM tb_user
        WHERE root = 1;
    </select>

    <!-- 因為id是自動生成的，所以要用openID去找id到底是什麼// Integer可以保存null，int不行-->
    <select id="searchIdByOpenId" parameterType="String" resultType="Integer">
        SELECT id
        FROM tb_user
        WHERE open_id = #{openId}
          AND status = 1
    </select>

    <!--JSON_CONTAINS(): [前面的]有沒有包含[後面的(必須用char比較)]-->
    <select id="searchUserPermissions" parameterType="int" resultType="String">
        SELECT p.permission_name
        FROM tb_user u
                 JOIN tb_role r ON JSON_CONTAINS(u.role, CAST(r.id AS CHAR))
                 JOIN tb_permission p ON JSON_CONTAINS(r.permissions, CAST(p.id AS CHAR))
        WHERE u.id = #{userId}
          AND u.status = 1;
    </select>

    <select id="searchById" parameterType="int" resultType="com.example.emos.wx.db.pojo.TbUser">
        SELECT id,
               open_id,
               nickname,
               photo,
               name,
               sex,
               tel,
               role,
               root,
               dept_id,
               status,
               create_time
        FROM tb_user
        WHERE id = #{userId}
          AND status = 1
    </select>

    <select id="searchNameAndDept" parameterType="int" resultType="HashMap">
        SELECT u.name, d.dept_name
        FROM tb_user u
                 LEFT JOIN tb_dept d ON u.dept_id = d.id
        WHERE u.id = #{userId}
          AND u.status = 1
    </select>

    <!-- 這裡返回值不是hashmap，不用在sql裡面就轉好類，在外面resultType轉就好-->
    <select id="searchUserHiredate" parameterType="int" resultType="String">
        SELECT hiredate
        FROM tb_user
        WHERE id = #{userId}
          AND status = 1
    </select>

    <select id="searchUserSummary" parameterType="int" resultType="HashMap">
        SELECT u.name, u.photo, d.dept_name AS deptName
        FROM tb_user u
                 LEFT JOIN tb_dept d ON u.dept_id = d.id
        WHERE u.id = #{userId}
          AND u.status = 1
    </select>

    <select id="searchUserGroupByDept" parameterType="String" resultType="HashMap">
        SELECT
        d.id AS deptId,
        d.dept_name AS deptName,
        u.id AS userId,
        u.name
        FROM tb_dept d JOIN tb_user u ON u.dept_id = d.id
        WHERE u.status = 1
        <if test="keyword != null">
            AND u.name LIKE '%${keyword}%'
        </if>
        ORDER BY d.id, u.id
    </select>

    <select id="searchMembers" parameterType="list" resultType="HashMap">
        SELECT id, name, photo
        FROM tb_user
        WHERE status = 1
        AND id IN
        <foreach collection="list" item="one" separator="," open="(" close=")">
            #{one}
        </foreach>
    </select>

    <select id="searchUserInfo" parameterType="int" resultType="HashMap">
        SELECT
            u.open_id AS openId,
            u.nickname,
            u.name,
            u.photo,
            u.sex,
            u.tel,
            u.email,
            d.dept_name AS dept,
            u.hiredate,
            CASE u.status
                WHEN 1 THEN "在職"
                WHEN 2 THEN "離職"
            END AS status,
            (SELECT GROUP_CONCAT( role_name separator ",") FROM tb_role WHERE JSON_CONTAINS (u.role, CONVERT (id, CHAR))) AS roles
        FROM tb_user u
        LEFT JOIN tb_dept d ON u.dept_id = d.id
        WHERE u.id = #{userId} AND u.status = 1
    </select>

    <!-- u1是員工 u2是經理-->
    <select id="searchDeptManagerId" parameterType="int" resultType="int">
        SELECT u2.id
        FROM tb_user u1 JOIN tb_user u2 ON u1.dept_id=u2.dept_id
        JOIN tb_role r ON JSON_CONTAINS(u2.role, CAST(r.id AS CHAR))
        WHERE u1.id=#{id} AND r.id=2 AND u1.status = 1 AND u2.status = 1
    </select>

    <select id="searchGmId" resultType="int">
        SELECT u.id
        FROM tb_user u
        JOIN tb_role r ON JSON_CONTAINS(u.role, CAST(r.id AS CHAR))
        WHERE r.id=1 AND u.status=1
    </select>

    <!--  比如說一個管理者創建一個普通員工的紀錄，這名普通員工是可以拿激活碼到emos上面，把自己的微信帳戶和員工紀錄進行綁定，-->
    <!--  那麼現有emos裡面他的openId就是空的-->
    <!--  openId是傳入的值-->
    <insert id="insert" parameterType="HashMap">
        INSERT INTO tb_user
        SET
        <if test="openId!=null">
            open_id = #{openId},
        </if>
        <if test="nickname!=null">
            nickname = #{nickname},
        </if>
        <if test="photo!=null">
            photo = #{photo},
        </if>
        <if test="name!=null">
            name = #{name},
        </if>
        <if test="sex!=null">
            sex = #{sex},
        </if>
        <if test="tel!=null">
            tel = #{tel},
        </if>
        <if test="email!=null">
            email=#{email},
        </if>
        <if test="hiredate!=null">
            hiredate = #{hiredate},
        </if>
        role = #{role},
        root = #{root},
        <if test="deptName!=null">
            dept_id = ( SELECT id FROM tb_dept WHERE dept_name = #{deptName} ),
        </if>
        status = #{status},
        create_time = #{createTime}
    </insert>
    <!--  role和root等沒有if test條件的是因為已經默認在業務層了-->
</mapper>